package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"fmt"

	"github.com/mvrdgs/go-experts/chi-graphql/graph/model"
)

// CreateHello is the resolver for the createHello field.
func (r *mutationResolver) CreateHello(ctx context.Context, input model.NewHello) (*model.Hello, error) {
	newHello := &model.Hello{
		ID:   len(r.Hello) + 1,
		Name: input.Name,
	}

	r.Hello = append(r.Hello, newHello)

	return newHello, nil
}

// Name is the resolver for the name field.
func (r *queryResolver) Name(ctx context.Context) (*model.Hello, error) {
	panic(fmt.Errorf("not implemented: Name - name"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
